{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "CppGuard": {
    "prefix": "cppgrd",
    "scope": "c, cpp",
    "body": [
      "#ifndef ${TM_FILENAME/(\\w+)\\..+$/${1:/upcase}_/g}",
      "#define ${TM_FILENAME/(\\w+)\\..+$/${1:/upcase}_/g}",
      "\n#endif // ${TM_FILENAME/(\\w+)\\..+$/${1:/upcase}_/g}"
    ]
  },

  "hTemplate": {
    "prefix": "htemplate",
    "scope": "c, cpp",
    "body": [
      "/********************************************************************************************************/",
      "/************************************************Includes************************************************/",
      "/********************************************************************************************************/",
      "\n",
      "/********************************************************************************************************/",
      "/************************************************Defines*************************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/************************************************Types***************************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/************************************************APIs****************************************************/",
      "/********************************************************************************************************/",
      "\n\n"
    ]
  },

  "CTemplate": {
    "prefix": "ctemplate",
    "scope": "c, cpp",
    "body": [
      "/********************************************************************************************************/",
      "/************************************************Includes************************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/************************************************Defines*************************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/************************************************Types***************************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/************************************************Variables***********************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/*****************************************Static Functions Prototype*************************************/",
      "/********************************************************************************************************/",
      "\n\n",
      "/********************************************************************************************************/",
      "/*********************************************APIs Implementation****************************************/",
      "/********************************************************************************************************/",
      "\n\n"
    ]
  }
}
